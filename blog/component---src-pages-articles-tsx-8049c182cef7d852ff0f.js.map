{"version":3,"sources":["webpack:///component---src-pages-articles-tsx-8049c182cef7d852ff0f.js","webpack:///./src/pages/articles.tsx"],"names":["webpackJsonp","159","module","exports","__webpack_require__","_taggedTemplateLiteralLoose","strings","raw","_templateObject","Object","defineProperty","value","React","gatsby_link_1","Page_1","Container_1","styled_components_1","variables_1","postQuery","PostElement","default","li","colors","linkInk","ink","fonts","serif","_ref","data","posts","allMarkdownRemark","edges","createElement","map","post","key","node","fields","slug","to","frontmatter","title","month","year"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAIA,SAASC,GAA4BC,EAASC,GAA0B,MAAnBD,GAAQC,IAAMA,EAAYD,EAF/E,GAAIE,GAAkBH,GAA6B,iHAAkH,6BAA8B,gDAAiD,2DAA4D,iHAAkH,6BAA8B,gDAAiD,0DAIjfI,QAAOC,eAAeP,EAAS,cAAgBQ,OAAO,GCXvD,IAAAC,GAAAR,EAAA,GACAS,EAAAT,EAAA,IAEAU,EAAAV,EAAA,IACAW,EAAAX,EAAA,IACAY,EAAAZ,EAAA,GACAa,EAAAb,EAAA,GA8BaD,GAAAe,UAAA,kCAmCb,IAAMC,GAAcH,EAAAI,QAAOC,GAArBb,EAOOS,EAAAK,OAAOC,QAGPN,EAAAK,OAAOE,IAEDP,EAAAQ,MAAMC,MAOzBvB,GAAAiB,QAAe,SAAAO,GAAkC,GAA/BC,GAA+BD,EAA/BC,KAEVC,EAAQD,EAAKE,kBAAkBC,KAErC,OACEnB,GAAAoB,cAAClB,EAAAM,QAAI,KACHR,EAAAoB,cAACjB,EAAAK,QAAS,KACPS,EAAMI,IAAI,SAAAC,GAAA,MACTtB,GAAAoB,cAACb,GAAYgB,IAAKD,EAAKE,KAAKC,OAAOC,MACjC1B,EAAAoB,cAACnB,EAAAO,SAAKmB,GAAIL,EAAKE,KAAKC,OAAOC,MACzB1B,EAAAoB,cAAA,UAAKE,EAAKE,KAAKI,YAAYC,OAC3B7B,EAAAoB,cAAA,SACGE,EAAKE,KAAKI,YAAYE,MD3E0O,IC2ElOR,EAAKE,KAAKI,YAAYG","file":"component---src-pages-articles-tsx-8049c182cef7d852ff0f.js","sourcesContent":["webpackJsonp([195955780871823],{\n\n/***/ 159:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _templateObject = _taggedTemplateLiteralLoose([\"\\n  list-style: none;\\n  h4 {\\n    margin-bottom: 0;\\n    line-height: 1.5rem;\\n  }\\n  h4:hover {\\n    color: \", \";\\n  }\\n  p {\\n    color: \", \";\\n    font-style: italic;\\n    font-family: \", \";\\n  }\\n  a:hover {\\n    text-decoration: none;\\n  }\\n\"], [\"\\n  list-style: none;\\n  h4 {\\n    margin-bottom: 0;\\n    line-height: 1.5rem;\\n  }\\n  h4:hover {\\n    color: \", \";\\n  }\\n  p {\\n    color: \", \";\\n    font-style: italic;\\n    font-family: \", \";\\n  }\\n  a:hover {\\n    text-decoration: none;\\n  }\\n\"]);\n\t\n\tfunction _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }\n\t\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar React = __webpack_require__(1);\n\tvar gatsby_link_1 = __webpack_require__(84);\n\tvar Page_1 = __webpack_require__(32);\n\tvar Container_1 = __webpack_require__(20);\n\tvar styled_components_1 = __webpack_require__(8);\n\tvar variables_1 = __webpack_require__(10);\n\t// language=GraphQL\n\texports.postQuery = \"** extracted graphql fragment **\";\n\tvar PostElement = styled_components_1.default.li(_templateObject, variables_1.colors.linkInk, variables_1.colors.ink, variables_1.fonts.serif);\n\texports.default = function (_ref) {\n\t  var data = _ref.data;\n\t\n\t  // noinspection TypeScriptUnresolvedVariable\n\t  var posts = data.allMarkdownRemark.edges;\n\t  return React.createElement(Page_1.default, null, React.createElement(Container_1.default, null, posts.map(function (post) {\n\t    return React.createElement(PostElement, { key: post.node.fields.slug }, React.createElement(gatsby_link_1.default, { to: post.node.fields.slug }, React.createElement(\"h4\", null, post.node.frontmatter.title), React.createElement(\"p\", null, post.node.frontmatter.month, \" \", post.node.frontmatter.year)));\n\t  })));\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-articles-tsx-8049c182cef7d852ff0f.js","import * as React from \"react\";\nimport Link from \"gatsby-link\";\n\nimport Page from \"../components/Page\";\nimport Container from \"../components/Container\";\nimport styled from \"styled-components\";\nimport { colors, fonts } from \"../styles/variables\";\nimport fontFace from \"polished/lib/mixins/fontFace\";\n\ninterface ArticleListingProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n        author: {\n          name: string;\n          url: string;\n        };\n      };\n    };\n    allMarkdownRemark: {\n      html: string;\n      frontmatter: {\n        title: string;\n        type: string;\n        category: string;\n        year: number;\n        month: number;\n        tags: Array<string>;\n      };\n    };\n  };\n}\n\n// language=GraphQL\nexport const postQuery = graphql`\n  query PostQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author {\n          name\n          url\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { type: { eq: \"Post\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            tags\n            year\n            month\n            type\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst PostElement = styled.li`\n  list-style: none;\n  h4 {\n    margin-bottom: 0;\n    line-height: 1.5rem;\n  }\n  h4:hover {\n    color: ${colors.linkInk};\n  }\n  p {\n    color: ${colors.ink};\n    font-style: italic;\n    font-family: ${fonts.serif};\n  }\n  a:hover {\n    text-decoration: none;\n  }\n`;\n\nexport default ({ data }: ArticleListingProps) => {\n  // noinspection TypeScriptUnresolvedVariable\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Page>\n      <Container>\n        {posts.map(post => (\n          <PostElement key={post.node.fields.slug}>\n            <Link to={post.node.fields.slug}>\n              <h4>{post.node.frontmatter.title}</h4>\n              <p>\n                {post.node.frontmatter.month} {post.node.frontmatter.year}\n              </p>\n            </Link>\n          </PostElement>\n        ))}\n      </Container>\n    </Page>\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/articles.tsx"],"sourceRoot":""}