{"version":3,"sources":["webpack:///./src/pages/portfolio.tsx","webpack:///./src/styles/variables.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.tsx","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/layouts/index.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/styles/mixins.ts","webpack:///./src/components/Container.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","postQuery","react__WEBPACK_IMPORTED_MODULE_0__","_components_Page__WEBPACK_IMPORTED_MODULE_1__","_components_Container__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_styles_variables__WEBPACK_IMPORTED_MODULE_4__","StyledList","styled","ul","withConfig","componentId","StyledListElement","li","colors","linkInk","ink","PortfolioPage","_ref","projects","data","allMarkdownRemark","edges","href","map","project","node","frontmatter","externalUrl","title","description","fonts","widths","dimensions","heights","brand","brandLight","brandDark","lilac","accent","success","warning","ui","bright","light","whisper","code","gray","dark","copy","calm","white","black","sansSerif","serif","monospace","sm","md","lg","xl","fontSize","base","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","hero","containerPadding","gridUnit","header","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","createElement","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","StyledHeader","transparentize","HeaderInner","div","Links","Title","Header","react","gatsby_link_default","a","to","StyledLayoutRoot","LayoutRoot","children","className","StyledLayoutMain","main","LayoutMain","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","query","render","object","func","IndexLayout","gatsby_browser_entry_StaticQuery","components_LayoutRoot","Helmet_default","site","siteMetadata","meta","name","content","components_Header","components_LayoutMain","_991718019","StyledPage","Page","layouts","getEmSize","size","StyledContainer","Container"],"mappings":"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","file":"component---src-pages-portfolio-tsx-73eefc01f9fc90513963.js","sourcesContent":["import * as React from \"react\";\r\n\r\nimport Page from \"../components/Page\";\r\nimport Container from \"../components/Container\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { colors, fonts } from \"../styles/variables\";\r\nimport { graphql } from \"gatsby\";\r\n\r\ninterface PortfolioPageProps {\r\n  data: {\r\n    site: {\r\n      siteMetadata: {\r\n        title: string;\r\n        description: string;\r\n        author: {\r\n          name: string;\r\n          url: string;\r\n        };\r\n      };\r\n    };\r\n    allMarkdownRemark: {\r\n      html: string;\r\n      frontmatter: {\r\n        order: number;\r\n        type: string;\r\n        description: string;\r\n        externalUrl: string;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\n// language=GraphQL\r\nexport const postQuery = graphql`\r\n  query ProjectQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author {\r\n          name\r\n          url\r\n        }\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: { frontmatter: { type: { eq: \"nugget\" } } }\r\n      sort: { fields: [frontmatter___order], order: ASC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            order\r\n            type\r\n            description\r\n            externalUrl\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledList = styled.ul`\r\n  padding: 0;\r\n`;\r\n\r\nconst StyledListWithoutDescriptions = styled.ul`\r\n  padding: 0;\r\n  h4 {\r\n    padding-bottom: 0;\r\n    line-height: 1;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst StyledListElement = styled.li`\r\n  list-style: none;\r\n  h4 {\r\n    margin-bottom: 0;\r\n    line-height: 1.5rem;\r\n  }\r\n  h4:hover {\r\n    color: ${colors.linkInk};\r\n  }\r\n  p {\r\n    color: ${colors.ink};\r\n  }\r\n  a:hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst PortfolioPage = ({ data }: PortfolioPageProps) => {\r\n  const projects = data.allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Page>\r\n      <Container>\r\n        <h3>Work</h3>\r\n        <StyledList>\r\n          <StyledListElement>\r\n            <p>To-do</p>\r\n          </StyledListElement>\r\n        </StyledList>\r\n\r\n        <h3>Published Articles</h3>\r\n        <StyledList>\r\n          <StyledListElement>\r\n            <a href=\"https://css-tricks.com/\">\r\n              <h4>To-do</h4>\r\n            </a>\r\n          </StyledListElement>\r\n        </StyledList>\r\n\r\n        <h3>Projects</h3>\r\n        <StyledList>\r\n          {projects.map(project => (\r\n            <StyledListElement>\r\n              <a href={project.node.frontmatter.externalUrl}>\r\n                <h4>{project.node.frontmatter.title}</h4>\r\n              </a>\r\n              <p>{project.node.frontmatter.description}</p>\r\n            </StyledListElement>\r\n          ))}\r\n        </StyledList>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PortfolioPage;\r\n","/* tslint:disable:max-line-length */\r\n\r\nexport const colors = {\r\n  brand: \"#2963ff\",\r\n  brandLight: \"#608cff\",\r\n  brandDark: \"#0942ff\",\r\n  lilac: \"#9d7cbf\",\r\n  accent: \"#cfa5ff\",\r\n  success: \"#37b635\",\r\n  warning: \"#ec1818\",\r\n  ui: {\r\n    bright: \"#e0d6eb\",\r\n    light: \"#f5f3f7\",\r\n    whisper: \"#fbfafc\",\r\n  },\r\n  code: \"#fcf6f0\",\r\n  gray: {\r\n    dark: \"hsla(270, 17.119554496%, 0%, 0.92)\",\r\n    copy: \"hsla(270, 15.797828016000002%, 0%, 0.88)\",\r\n    calm: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  white: \"#fff\",\r\n  black: \"#000\",\r\n  ink: \"rgba(0, 0, 0, .7)\",\r\n  linkInk: \"#4100ba\",\r\n};\r\n\r\nexport const fonts = {\r\n  sansSerif:\r\n    '\"Avenir\",-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",' +\r\n    ' \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\r\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\r\n  monospace:\r\n    'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\",' +\r\n    \" monospace, monospace\",\r\n};\r\n\r\nexport const breakpoints = {\r\n  xs: 0,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200,\r\n};\r\n\r\nexport const widths = {\r\n  sm: 600,\r\n  md: 720,\r\n  lg: 960,\r\n  xl: 1140,\r\n};\r\n\r\nexport const dimensions = {\r\n  fontSize: {\r\n    base: 10,\r\n    regular: 16,\r\n    large: 18,\r\n  },\r\n  headingSizes: {\r\n    h1: 4,\r\n    h2: 3,\r\n    h3: 2,\r\n    h4: 1,\r\n  },\r\n  lineHeight: {\r\n    regular: 1.5,\r\n    heading: 1,\r\n    hero: 1.2,\r\n  },\r\n  containerPadding: 1.5,\r\n  gridUnit: 10,\r\n};\r\n\r\nexport const heights = {\r\n  header: 40,\r\n};\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { transparentize } from \"polished\";\r\nimport Link from \"gatsby-link\";\r\n\r\nimport { heights, dimensions, colors } from \"../styles/variables\";\r\n// import { onEvent } from \"../styles/mixins\";\r\nimport Container from \"./Container\";\r\n\r\nconst StyledHeader = styled.header`\r\n  height: ${heights.header}px;\r\n  color: ${transparentize(0.5, colors.white)};\r\n  background: ${colors.ui.light};\r\n`;\r\n\r\nconst HeaderInner = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n  border-bottom: 1px solid ${colors.black};\r\n  margin: 0 ${dimensions.containerPadding}rem;\r\n`;\r\n\r\nconst Links = styled.div`\r\n  a {\r\n    color: ${colors.black};\r\n    padding-left: ${dimensions.gridUnit}px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  a {\r\n    color: ${colors.black};\r\n  }\r\n`;\r\n\r\ninterface HeaderProps {\r\n  title: string;\r\n}\r\n\r\nconst Header: React.SFC<HeaderProps> = ({ title }) => (\r\n  <StyledHeader>\r\n    <HeaderInner>\r\n      <Title>\r\n        <Link to=\"/blog/\">{title}</Link>\r\n      </Title>\r\n      <Links>\r\n        <Link to=\"/blog/posts/my-library/\">Library</Link>\r\n        <Link to=\"/blog/articles\">Articles</Link>\r\n        <Link to=\"/blog/portfolio\">Portfolio</Link>\r\n      </Links>\r\n    </HeaderInner>\r\n  </StyledHeader>\r\n);\r\n\r\nexport default Header;\r\n","import * as React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledLayoutRoot = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n`\r\n\r\ninterface LayoutRootProps {\r\n  className?: string\r\n}\r\n\r\nconst LayoutRoot: React.SFC<LayoutRootProps> = ({ children, className }) => (\r\n  <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\r\n)\r\n\r\nexport default LayoutRoot\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { colors } from \"../styles/variables\";\r\n\r\nconst StyledLayoutMain = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  background: ${colors.ui.light};\r\n`;\r\n\r\ninterface LayoutMainProps {\r\n  className?: string;\r\n}\r\n\r\nconst LayoutMain: React.SFC<LayoutMainProps> = ({ children, className }) => (\r\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\r\n);\r\n\r\nexport default LayoutMain;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport \"../styles/normalize.css\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport LayoutRoot from \"../components/LayoutRoot\";\r\nimport LayoutMain from \"../components/LayoutMain\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\ninterface WrapperProps {\r\n  children: any;\r\n  data: {\r\n    site: {\r\n      siteMetadata: {\r\n        title: string;\r\n        description: string;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nconst IndexLayout: React.SFC<WrapperProps> = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query IndexLayoutQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <LayoutRoot>\r\n        <Helmet\r\n          title={data.site.siteMetadata.title}\r\n          meta={[\r\n            {\r\n              name: \"description\",\r\n              content: data.site.siteMetadata.description\r\n            },\r\n            {\r\n              name: \"keywords\",\r\n              content: \"gatsbyjs, gatsby, javascript, sample, something\"\r\n            }\r\n          ]}\r\n        />\r\n        <Header title={data.site.siteMetadata.title} />\r\n        <LayoutMain>{children}</LayoutMain>\r\n      </LayoutRoot>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default IndexLayout;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { dimensions } from \"../styles/variables\";\r\nimport { graphql } from \"gatsby\";\r\nimport IndexLayout from \"../layouts/index\";\r\n\r\nconst StyledPage = styled.div`\r\n  display: block;\r\n  flex: 1;\r\n  position: relative;\r\n  padding: ${dimensions.containerPadding}rem;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\ninterface PageProps {\r\n  className?: string;\r\n}\r\n\r\nconst Page: React.SFC<PageProps> = ({ children, className }) => (\r\n  <IndexLayout>\r\n    <StyledPage className={className}>{children}</StyledPage>\r\n  </IndexLayout>\r\n);\r\n\r\nexport default Page;\r\n","import { css, SimpleInterpolation } from \"styled-components\";\r\nimport { dimensions } from \"./variables\";\r\n\r\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular;\r\n\r\n// use em in breakpoints to work properly cross-browser and support users\r\n// changing their browsers font-size: https://zellwk.com/blog/media-query-units/\r\nexport const media = {\r\n  sm: (\r\n    styles: TemplateStringsArray,\r\n    ...interpolations: SimpleInterpolation[]\r\n  ) => css`\r\n    @media (max-width: ${getEmSize(576)}em) {\r\n      ${css(styles, ...interpolations)};\r\n    }\r\n  `,\r\n  md: (\r\n    styles: TemplateStringsArray,\r\n    ...interpolations: SimpleInterpolation[]\r\n  ) => css`\r\n    @media (min-width: ${getEmSize(768)}em) {\r\n      ${css(styles, ...interpolations)};\r\n    }\r\n  `,\r\n  lg: (\r\n    styles: TemplateStringsArray,\r\n    ...interpolations: SimpleInterpolation[]\r\n  ) => css`\r\n    @media (min-width: ${getEmSize(992)}em) {\r\n      ${css(styles, ...interpolations)};\r\n    }\r\n  `,\r\n  xl: (\r\n    styles: TemplateStringsArray,\r\n    ...interpolations: SimpleInterpolation[]\r\n  ) => css`\r\n    @media (min-width: ${getEmSize(1200)}em) {\r\n      ${css(styles, ...interpolations)};\r\n    }\r\n  `,\r\n};\r\n\r\n// event wrapper\r\nexport const onEvent = (\r\n  styles: TemplateStringsArray,\r\n  ...interpolations: SimpleInterpolation[]\r\n) => css`\r\n  &:hover,\r\n  &:focus {\r\n    ${css(styles, ...interpolations)};\r\n  }\r\n`;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { widths } from \"../styles/variables\";\r\nimport { getEmSize } from \"../styles/mixins\";\r\n\r\nconst StyledContainer = styled.div`\r\n  position: relative;\r\n  width: auto;\r\n  max-width: ${getEmSize(widths.md)}em;\r\n`;\r\n\r\ninterface ContainerProps {\r\n  className?: string;\r\n}\r\n\r\nconst Container: React.SFC<ContainerProps> = ({ children, className }): any => (\r\n  <StyledContainer className={className}>{children}</StyledContainer>\r\n);\r\n\r\nexport default Container;\r\n"],"sourceRoot":""}