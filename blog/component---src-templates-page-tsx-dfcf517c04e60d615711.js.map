{"version":3,"sources":["webpack:///./src/templates/page.tsx","webpack:///./src/styles/variables.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.tsx","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/layouts/index.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/styles/mixins.ts","webpack:///./src/components/Container.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","_components_Page__WEBPACK_IMPORTED_MODULE_1__","_components_Container__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_styles_variables__WEBPACK_IMPORTED_MODULE_4__","PageTemplate","_ref","data","SyntaxHighlighting","markdownRemark","frontmatter","title","dangerouslySetInnerHTML","__html","html","styled","div","withConfig","componentId","fonts","monospace","colors","widths","dimensions","heights","brand","brandLight","brandDark","lilac","accent","success","warning","ui","bright","light","whisper","code","gray","dark","copy","calm","white","black","ink","linkInk","sansSerif","serif","sm","md","lg","xl","fontSize","base","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","hero","containerPadding","gridUnit","header","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","createElement","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","StyledHeader","transparentize","HeaderInner","Links","Title","Header","react","gatsby_link_default","a","to","StyledLayoutRoot","LayoutRoot","children","className","StyledLayoutMain","main","LayoutMain","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","render","object","func","IndexLayout","gatsby_browser_entry_StaticQuery","components_LayoutRoot","Helmet_default","site","siteMetadata","meta","name","content","description","components_Header","components_LayoutMain","_991718019","StyledPage","Page","layouts","getEmSize","size","StyledContainer","Container"],"mappings":"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","file":"component---src-templates-page-tsx-dfcf517c04e60d615711.js","sourcesContent":["import * as React from \"react\";\r\n\r\nimport Page from \"../components/Page\";\r\nimport Container from \"../components/Container\";\r\nimport styled from \"styled-components\";\r\nimport { fonts } from \"../styles/variables\";\r\nimport { graphql } from \"gatsby\";\r\n\r\ninterface PageTemplateProps {\r\n  data: {\r\n    site: {\r\n      siteMetadata: {\r\n        title: string;\r\n        description: string;\r\n        author: {\r\n          name: string;\r\n          url: string;\r\n        };\r\n      };\r\n    };\r\n    markdownRemark: {\r\n      html: string;\r\n      excerpt: string;\r\n      frontmatter: {\r\n        title: string;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nconst PageTemplate: React.SFC<PageTemplateProps> = ({ data }) => (\r\n  <Page>\r\n    <Container>\r\n      <SyntaxHighlighting>\r\n        <h2>{data.markdownRemark.frontmatter.title}</h2>\r\n        <div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\r\n      </SyntaxHighlighting>\r\n    </Container>\r\n  </Page>\r\n);\r\n\r\nexport default PageTemplate;\r\n\r\nexport const query = graphql`\r\n  query PageTemplateQuery($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author {\r\n          name\r\n          url\r\n        }\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SyntaxHighlighting = styled.div`\r\n  // Syntax:\r\n  .gatsby-highlight {\r\n    margin: 8px 0;\r\n  }\r\n\r\n  code[class*=\"language-\"],\r\n  pre[class*=\"language-\"] {\r\n    padding: 10px;\r\n    color: #f8f8f2;\r\n    background: transparent;\r\n    text-shadow: 0 1px rgba(0, 0, 0, 0.3);\r\n    font-family: ${fonts.monospace};\r\n    font-size: 14px;\r\n    text-align: left;\r\n    white-space: pre;\r\n    word-spacing: normal;\r\n    word-break: normal;\r\n    word-wrap: normal;\r\n    line-height: 1.5;\r\n\r\n    -moz-tab-size: 4;\r\n    -o-tab-size: 4;\r\n    tab-size: 4;\r\n\r\n    -webkit-hyphens: none;\r\n    -moz-hyphens: none;\r\n    -ms-hyphens: none;\r\n    hyphens: none;\r\n  }\r\n\r\n  /* Code blocks */\r\n  pre[class*=\"language-\"] {\r\n    padding: 1em;\r\n    margin: 0.5em 0;\r\n    overflow: auto;\r\n    border-radius: 0.3em;\r\n  }\r\n\r\n  :not(pre) > code[class*=\"language-\"],\r\n  pre[class*=\"language-\"] {\r\n    background: #272822;\r\n  }\r\n\r\n  :not(pre) > code {\r\n    background: lighten(black, 70%);\r\n    font-size: 14px;\r\n    padding: 0.1em;\r\n    border-radius: 0.3em;\r\n    white-space: normal;\r\n  }\r\n\r\n  .token.comment,\r\n  .token.prolog,\r\n  .token.doctype,\r\n  .token.cdata {\r\n    color: lighten(black, 50%);\r\n  }\r\n\r\n  .token.class-name {\r\n    color: #ff8080;\r\n  }\r\n\r\n  .token.punctuation {\r\n    color: #f8f8f2;\r\n  }\r\n\r\n  .namespace {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  .token.property,\r\n  .token.tag,\r\n  .token.constant,\r\n  .token.symbol,\r\n  .token.deleted {\r\n    color: #f92672;\r\n  }\r\n\r\n  .token.boolean,\r\n  .token.number {\r\n    color: #efc090;\r\n  }\r\n\r\n  .token.selector,\r\n  .token.attr-name,\r\n  .token.string,\r\n  .token.char,\r\n  .token.builtin,\r\n  .token.inserted,\r\n  .token.variable {\r\n    color: #dc78dc;\r\n  }\r\n\r\n  .token.operator,\r\n  .token.entity,\r\n  .token.url,\r\n  .language-css .token.string,\r\n  .style .token.string {\r\n    color: #f8f8f2;\r\n  }\r\n\r\n  .token.atrule,\r\n  .token.attr-value,\r\n  .token.function {\r\n    color: #bed6ff;\r\n  }\r\n\r\n  .token.keyword {\r\n    color: #00d0d0;\r\n  }\r\n\r\n  .token.regex,\r\n  .token.important {\r\n    color: #ccdf32;\r\n  }\r\n\r\n  .token.important,\r\n  .token.bold {\r\n    font-weight: bold;\r\n  }\r\n  .token.italic {\r\n    font-style: italic;\r\n  }\r\n\r\n  .token.entity {\r\n    cursor: help;\r\n  }\r\n`;\r\n","/* tslint:disable:max-line-length */\r\n\r\nexport const colors = {\r\n  brand: \"#2963ff\",\r\n  brandLight: \"#608cff\",\r\n  brandDark: \"#0942ff\",\r\n  lilac: \"#9d7cbf\",\r\n  accent: \"#cfa5ff\",\r\n  success: \"#37b635\",\r\n  warning: \"#ec1818\",\r\n  ui: {\r\n    bright: \"#e0d6eb\",\r\n    light: \"#f5f3f7\",\r\n    whisper: \"#fbfafc\",\r\n  },\r\n  code: \"#fcf6f0\",\r\n  gray: {\r\n    dark: \"hsla(270, 17.119554496%, 0%, 0.92)\",\r\n    copy: \"hsla(270, 15.797828016000002%, 0%, 0.88)\",\r\n    calm: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  white: \"#fff\",\r\n  black: \"#000\",\r\n  ink: \"rgba(0, 0, 0, .7)\",\r\n  linkInk: \"#4100ba\",\r\n};\r\n\r\nexport const fonts = {\r\n  sansSerif:\r\n    '\"Avenir\",-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",' +\r\n    ' \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\r\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\r\n  monospace:\r\n    'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\",' +\r\n    \" monospace, monospace\",\r\n};\r\n\r\nexport const breakpoints = {\r\n  xs: 0,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200,\r\n};\r\n\r\nexport const widths = {\r\n  sm: 600,\r\n  md: 720,\r\n  lg: 960,\r\n  xl: 1140,\r\n};\r\n\r\nexport const dimensions = {\r\n  fontSize: {\r\n    base: 10,\r\n    regular: 16,\r\n    large: 18,\r\n  },\r\n  headingSizes: {\r\n    h1: 4,\r\n    h2: 3,\r\n    h3: 2,\r\n    h4: 1,\r\n  },\r\n  lineHeight: {\r\n    regular: 1.5,\r\n    heading: 1,\r\n    hero: 1.2,\r\n  },\r\n  containerPadding: 1.5,\r\n  gridUnit: 10,\r\n};\r\n\r\nexport const heights = {\r\n  header: 40,\r\n};\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { transparentize } from \"polished\";\r\nimport Link from \"gatsby-link\";\r\n\r\nimport { heights, dimensions, colors } from \"../styles/variables\";\r\n// import { onEvent } from \"../styles/mixins\";\r\nimport Container from \"./Container\";\r\n\r\nconst StyledHeader = styled.header`\r\n  height: ${heights.header}px;\r\n  color: ${transparentize(0.5, colors.white)};\r\n  background: ${colors.ui.light};\r\n`;\r\n\r\nconst HeaderInner = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n  border-bottom: 1px solid ${colors.black};\r\n  margin: 0 ${dimensions.containerPadding}rem;\r\n`;\r\n\r\nconst Links = styled.div`\r\n  a {\r\n    color: ${colors.black};\r\n    padding-left: ${dimensions.gridUnit}px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  a {\r\n    color: ${colors.black};\r\n  }\r\n`;\r\n\r\ninterface HeaderProps {\r\n  title: string;\r\n}\r\n\r\nconst Header: React.SFC<HeaderProps> = ({ title }) => (\r\n  <StyledHeader>\r\n    <HeaderInner>\r\n      <Title>\r\n        <Link to=\"/blog/\">{title}</Link>\r\n      </Title>\r\n      <Links>\r\n        <Link to=\"/blog/posts/my-library/\">Library</Link>\r\n        <Link to=\"/blog/articles\">Articles</Link>\r\n        <Link to=\"/blog/portfolio\">Portfolio</Link>\r\n      </Links>\r\n    </HeaderInner>\r\n  </StyledHeader>\r\n);\r\n\r\nexport default Header;\r\n","import * as React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledLayoutRoot = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n`\r\n\r\ninterface LayoutRootProps {\r\n  className?: string\r\n}\r\n\r\nconst LayoutRoot: React.SFC<LayoutRootProps> = ({ children, className }) => (\r\n  <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\r\n)\r\n\r\nexport default LayoutRoot\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { colors } from \"../styles/variables\";\r\n\r\nconst StyledLayoutMain = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  background: ${colors.ui.light};\r\n`;\r\n\r\ninterface LayoutMainProps {\r\n  className?: string;\r\n}\r\n\r\nconst LayoutMain: React.SFC<LayoutMainProps> = ({ children, className }) => (\r\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\r\n);\r\n\r\nexport default LayoutMain;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport \"../styles/normalize.css\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport LayoutRoot from \"../components/LayoutRoot\";\r\nimport LayoutMain from \"../components/LayoutMain\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\ninterface WrapperProps {\r\n  children: any;\r\n  data: {\r\n    site: {\r\n      siteMetadata: {\r\n        title: string;\r\n        description: string;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nconst IndexLayout: React.SFC<WrapperProps> = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query IndexLayoutQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <LayoutRoot>\r\n        <Helmet\r\n          title={data.site.siteMetadata.title}\r\n          meta={[\r\n            {\r\n              name: \"description\",\r\n              content: data.site.siteMetadata.description\r\n            },\r\n            {\r\n              name: \"keywords\",\r\n              content: \"gatsbyjs, gatsby, javascript, sample, something\"\r\n            }\r\n          ]}\r\n        />\r\n        <Header title={data.site.siteMetadata.title} />\r\n        <LayoutMain>{children}</LayoutMain>\r\n      </LayoutRoot>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default IndexLayout;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { dimensions } from \"../styles/variables\";\r\nimport { graphql } from \"gatsby\";\r\nimport IndexLayout from \"../layouts/index\";\r\n\r\nconst StyledPage = styled.div`\r\n  display: block;\r\n  flex: 1;\r\n  position: relative;\r\n  padding: ${dimensions.containerPadding}rem;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\ninterface PageProps {\r\n  className?: string;\r\n}\r\n\r\nconst Page: React.SFC<PageProps> = ({ children, className }) => (\r\n  <IndexLayout>\r\n    <StyledPage className={className}>{children}</StyledPage>\r\n  </IndexLayout>\r\n);\r\n\r\nexport default Page;\r\n","import { css, SimpleInterpolation } from \"styled-components\";\r\nimport { dimensions } from \"./variables\";\r\n\r\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular;\r\n\r\n// use em in breakpoints to work properly cross-browser and support users\r\n// changing their browsers font-size: https://zellwk.com/blog/media-query-units/\r\nexport const media = {\r\n  sm: (\r\n    styles: TemplateStringsArray,\r\n    ...interpolations: SimpleInterpolation[]\r\n  ) => css`\r\n    @media (max-width: ${getEmSize(576)}em) {\r\n      ${css(styles, ...interpolations)};\r\n    }\r\n  `,\r\n  md: (\r\n    styles: TemplateStringsArray,\r\n    ...interpolations: SimpleInterpolation[]\r\n  ) => css`\r\n    @media (min-width: ${getEmSize(768)}em) {\r\n      ${css(styles, ...interpolations)};\r\n    }\r\n  `,\r\n  lg: (\r\n    styles: TemplateStringsArray,\r\n    ...interpolations: SimpleInterpolation[]\r\n  ) => css`\r\n    @media (min-width: ${getEmSize(992)}em) {\r\n      ${css(styles, ...interpolations)};\r\n    }\r\n  `,\r\n  xl: (\r\n    styles: TemplateStringsArray,\r\n    ...interpolations: SimpleInterpolation[]\r\n  ) => css`\r\n    @media (min-width: ${getEmSize(1200)}em) {\r\n      ${css(styles, ...interpolations)};\r\n    }\r\n  `,\r\n};\r\n\r\n// event wrapper\r\nexport const onEvent = (\r\n  styles: TemplateStringsArray,\r\n  ...interpolations: SimpleInterpolation[]\r\n) => css`\r\n  &:hover,\r\n  &:focus {\r\n    ${css(styles, ...interpolations)};\r\n  }\r\n`;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { widths } from \"../styles/variables\";\r\nimport { getEmSize } from \"../styles/mixins\";\r\n\r\nconst StyledContainer = styled.div`\r\n  position: relative;\r\n  width: auto;\r\n  max-width: ${getEmSize(widths.md)}em;\r\n`;\r\n\r\ninterface ContainerProps {\r\n  className?: string;\r\n}\r\n\r\nconst Container: React.SFC<ContainerProps> = ({ children, className }): any => (\r\n  <StyledContainer className={className}>{children}</StyledContainer>\r\n);\r\n\r\nexport default Container;\r\n"],"sourceRoot":""}